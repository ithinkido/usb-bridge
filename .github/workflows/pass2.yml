name: Build

on:
  push:
  workflow_dispatch:

env:
  esp_idf_version: 'v5.2'

jobs:
  cache_esp_idf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Checkout esp-usb-bridge repo
        uses: actions/checkout@v4
        with:
          repository: espressif/esp-usb-bridge
          path: esp

      - name: Cache esp-idf and its tools
        id: esp-idf-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/esp/esp-idf
            ~/.espressif
            ~/build
          key: ${{ runner.os }}-IDF ver-$({ env.esp_idf_version })

      - name: Install ESP-IDF ${{ env.esp_idf_version }}
        run: |
          if [[ "${{ steps.esp-idf-cache.outputs.cache-hit }}" == "true" ]]; then
            echo "Cache hit - skipping dependency installation"
          else
            export DEBIAN_FRONTEND=noninteractive; \
            sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util; \
            sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10; \
            mkdir ~/esp; \
            cd ~/esp; \
            git clone --recursive https://github.com/espressif/esp-idf.git; \
            cd ~/esp/esp-idf; \
            ./install.sh
          fi
        shell: bash

  build_bin_files:
    runs-on: ubuntu-latest
    needs:
      - cache_esp_idf
    strategy:
      matrix:
        esp_idf_targets: [esp32s2, esp32s3]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load ESP-IDF cache
        uses: actions/cache@v3
        with:
          path: |
            ~/esp/esp-idf
            ~/.espressif
            ~/build
          key: ${{ runner.os }}-IDF ver-$({ env.esp_idf_version })



      - name: Build bin file for ${{ matrix.esp_idf_targets }}
        run: |
          ls -l
          cd esp/
          source ~/esp/esp-idf/export.sh
          idf.py set-target ${{ matrix.esp_idf_targets }}
          idf.py build
          cd build/
          esptool.py --chip ${{ matrix.esp_idf_targets }} merge_bin -o ../../esp_usb_bridge_${{ matrix.esp_idf_targets }}.bin @flash_args
          echo "BIN_PATH=../../esp_usb_bridge_${{ matrix.esp_idf_targets }}.bin" >> $GITHUB_ENV
        shell: bash

  add_and_commit:
    runs-on: ubuntu-latest
    needs:
      - build_bin_files
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add and commit bin files
        run: |
          mv ${{ env.BIN_PATH }} bin_files/
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add bin_files/
          git commit -m "Add latest s2 and s3 bin files"
          git push
        working-directory: ./bin_files
