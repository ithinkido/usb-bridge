name: Build

on:
  push:
  workflow_dispatch:

env:
  esp_idf_version: 'v5.2'

jobs:
  cache_esp_idf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Cache ESP-IDF
        uses: martijnhols/actions-cache/check@v3
        id: check_cache
        with:
          path: |
            ~/esp
            ~/.espressif
          key: ESP-IDF ver-${{ env.esp_idf_version }}

      - name: Install ESP-IDF ${{ env.esp_idf_version }}
        if: steps.check_cache.outputs.cache-hit != 'true'
        run: |
          export DEBIAN_FRONTEND=noninteractive; \
          sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util; \
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10; \
          mkdir ~/esp; \
          cd ~/esp; \
          git clone --recursive https://github.com/espressif/esp-idf.git; \
          cd ~/esp/esp-idf; \
          ./install.sh
        shell: bash

      - name: Save "ESP-IDF" to cache
        if: steps.check_cache.outputs.cache-hit != 'true'
        uses: martijnhols/actions-cache/save@v3
        with:
          path: |
            ~/esp/esp-idf
            ~/.espressif
          key: ESP-IDF ver-${{ env.esp_idf_version }}  

  build:
    needs: cache_esp_idf
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    strategy:
      matrix:
        # esp_idf_targets: [esp32s2, esp32s3]
        include:
          - esp_idf_target: esp32s2
            esp_idf_chip: s2
          - esp_idf_target: esp32s3
            esp_idf_chip: s3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache esp-idf and its tools
        id: esp-idf-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/esp/esp-idf
            ~/.espressif
          key: ESP-IDF ver-${{ env.esp_idf_version }}

      - name: Checkout tools repo
        uses: actions/checkout@v4
        with:
          repository: espressif/esp-usb-bridge
          path: esp
 
      - name: list  
        run: |
          ls -a -l

      - name: list  esp dir
        run: |
          ls -a -l esp/          

      # - name: Install ESP-IDF ${{ env.esp_idf_version }}
      #   run: |
      #     if [[ "${{ steps.esp-idf-cache.outputs.cache-hit }}" == "true" ]]; then
      #       echo "Cache hit - skipping dependency installation"
      #     else
      #       export DEBIAN_FRONTEND=noninteractive; \
      #       sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util; \
      #       sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10; \
      #       mkdir ~/esp; \
      #       cd ~/esp; \
      #       git clone --recursive https://github.com/espressif/esp-idf.git; \
      #       cd ~/esp/esp-idf; \
      #       ./install.sh
      #     fi
      #   shell: bash

      - name: Build for ${{ matrix.esp_idf_target }}
        run: |
          cd esp/
          source ~/esp/esp-idf/export.sh
          idf.py set-target ${{ matrix.esp_idf_target }}
          idf.py build
          # idf.py app
          cd build/
          esptool.py --chip ${{ matrix.esp_idf_target }} merge_bin -o ../../esp_usb_bridge_${{ matrix.esp_idf_chip }}.bin @flash_args
        shell: bash
